// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProgramApp.API.DBContext;

#nullable disable

namespace ProgramApp.API.Migrations
{
    [DbContext(typeof(ProgramAppDBContext))]
    [Migration("20230925092712_program")]
    partial class program
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.22")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ProgramApp.Database.Domain.EducationDomain", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Degree")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EducationEntityId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCurrentStudy")
                        .HasColumnType("bit");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("School")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EducationEntityId");

                    b.ToTable("EducationDomain");
                });

            modelBuilder.Entity("ProgramApp.Database.Domain.QuestionDomain", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("QuestionCategory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("QuestionDomain");
                });

            modelBuilder.Entity("ProgramApp.Database.Domain.StageDomain", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("IsTheStageVisible")
                        .HasColumnType("bit");

                    b.Property<int?>("StageId")
                        .HasColumnType("int");

                    b.Property<string>("StageName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("StageId");

                    b.ToTable("StageDomain");
                });

            modelBuilder.Entity("ProgramApp.Database.Domain.WorkExperienceDomain", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Company")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCurrentCompany")
                        .HasColumnType("bit");

                    b.Property<string>("Locattion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WorkExperienceEntityId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WorkExperienceEntityId");

                    b.ToTable("WorkExperienceDomain");
                });

            modelBuilder.Entity("ProgramApp.Database.Entity.Implementation.InternalVisibleEntity.DOBEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DOBInfo")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsInternal")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisible")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("DOBEntity");
                });

            modelBuilder.Entity("ProgramApp.Database.Entity.Implementation.InternalVisibleEntity.GenderEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("GenderInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsInternal")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisible")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("GenderEntity");
                });

            modelBuilder.Entity("ProgramApp.Database.Entity.Implementation.InternalVisibleEntity.IDEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("IDNumberInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsInternal")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisible")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("IDEntity");
                });

            modelBuilder.Entity("ProgramApp.Database.Entity.Implementation.InternalVisibleEntity.NationalityEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("IsInternal")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisible")
                        .HasColumnType("bit");

                    b.Property<string>("NationalityInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("NationalityEntity");
                });

            modelBuilder.Entity("ProgramApp.Database.Entity.Implementation.InternalVisibleEntity.PhoneNumberEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("IsInternal")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisible")
                        .HasColumnType("bit");

                    b.Property<string>("PhoneNumberInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PhoneNumberEntity");
                });

            modelBuilder.Entity("ProgramApp.Database.Entity.Implementation.InternalVisibleEntity.ResidenceEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CurrentResidenceInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsInternal")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisible")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("ResidenceEntity");
                });

            modelBuilder.Entity("ProgramApp.Database.Entity.Implementation.MandatoryVisibleEntity.EducationEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("IsMandatory")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisible")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("EducationEntity");
                });

            modelBuilder.Entity("ProgramApp.Database.Entity.Implementation.MandatoryVisibleEntity.ResumeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("IsMandatory")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisible")
                        .HasColumnType("bit");

                    b.Property<string>("ResumeURLInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ResumeEntity");
                });

            modelBuilder.Entity("ProgramApp.Database.Entity.Implementation.MandatoryVisibleEntity.WorkExperienceEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("IsMandatory")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisible")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("WorkExperienceEntity");
                });

            modelBuilder.Entity("ProgramApp.Database.Models.ProgramDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("ApplicationClose")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApplicationCriteria")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ApplicationOpen")
                        .HasColumnType("datetime2");

                    b.Property<string>("CoverImageURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Duration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaxNumberOfApplication")
                        .HasColumnType("int");

                    b.Property<string>("MinQualifications")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProgramBenefits")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProgramDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProgramLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ProgramStart")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProgramSummary")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProgramTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProgramType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("programs");
                });

            modelBuilder.Entity("ProgramApp.Database.Models.Stage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ProgramId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProgramId");

                    b.ToTable("stages");
                });

            modelBuilder.Entity("ProgramApp.Database.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CurrentResidenceId")
                        .HasColumnType("int");

                    b.Property<int>("DOBId")
                        .HasColumnType("int");

                    b.Property<int>("EducationsId")
                        .HasColumnType("int");

                    b.Property<string>("EmailId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GenderId")
                        .HasColumnType("int");

                    b.Property<int>("IdNumberId")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NationalityId")
                        .HasColumnType("int");

                    b.Property<int>("PhoneNumberId")
                        .HasColumnType("int");

                    b.Property<int>("ProgramId")
                        .HasColumnType("int");

                    b.Property<int>("ResumeId")
                        .HasColumnType("int");

                    b.Property<int>("WorkExperiencesId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CurrentResidenceId");

                    b.HasIndex("DOBId");

                    b.HasIndex("EducationsId");

                    b.HasIndex("GenderId");

                    b.HasIndex("IdNumberId");

                    b.HasIndex("NationalityId");

                    b.HasIndex("PhoneNumberId");

                    b.HasIndex("ProgramId");

                    b.HasIndex("ResumeId");

                    b.HasIndex("WorkExperiencesId");

                    b.ToTable("users");
                });

            modelBuilder.Entity("ProgramApp.Database.Domain.EducationDomain", b =>
                {
                    b.HasOne("ProgramApp.Database.Entity.Implementation.MandatoryVisibleEntity.EducationEntity", null)
                        .WithMany("EducationInfo")
                        .HasForeignKey("EducationEntityId");
                });

            modelBuilder.Entity("ProgramApp.Database.Domain.QuestionDomain", b =>
                {
                    b.HasOne("ProgramApp.Database.Models.User", null)
                        .WithMany("Questions")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("ProgramApp.Database.Domain.StageDomain", b =>
                {
                    b.HasOne("ProgramApp.Database.Models.Stage", null)
                        .WithMany("StageList")
                        .HasForeignKey("StageId");
                });

            modelBuilder.Entity("ProgramApp.Database.Domain.WorkExperienceDomain", b =>
                {
                    b.HasOne("ProgramApp.Database.Entity.Implementation.MandatoryVisibleEntity.WorkExperienceEntity", null)
                        .WithMany("WorkExperienceInfo")
                        .HasForeignKey("WorkExperienceEntityId");
                });

            modelBuilder.Entity("ProgramApp.Database.Models.Stage", b =>
                {
                    b.HasOne("ProgramApp.Database.Models.ProgramDetail", "ProgramDetail")
                        .WithMany()
                        .HasForeignKey("ProgramId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProgramDetail");
                });

            modelBuilder.Entity("ProgramApp.Database.Models.User", b =>
                {
                    b.HasOne("ProgramApp.Database.Entity.Implementation.InternalVisibleEntity.ResidenceEntity", "CurrentResidence")
                        .WithMany()
                        .HasForeignKey("CurrentResidenceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProgramApp.Database.Entity.Implementation.InternalVisibleEntity.DOBEntity", "DOB")
                        .WithMany()
                        .HasForeignKey("DOBId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProgramApp.Database.Entity.Implementation.MandatoryVisibleEntity.EducationEntity", "Educations")
                        .WithMany()
                        .HasForeignKey("EducationsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProgramApp.Database.Entity.Implementation.InternalVisibleEntity.GenderEntity", "Gender")
                        .WithMany()
                        .HasForeignKey("GenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProgramApp.Database.Entity.Implementation.InternalVisibleEntity.IDEntity", "IdNumber")
                        .WithMany()
                        .HasForeignKey("IdNumberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProgramApp.Database.Entity.Implementation.InternalVisibleEntity.NationalityEntity", "Nationality")
                        .WithMany()
                        .HasForeignKey("NationalityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProgramApp.Database.Entity.Implementation.InternalVisibleEntity.PhoneNumberEntity", "PhoneNumber")
                        .WithMany()
                        .HasForeignKey("PhoneNumberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProgramApp.Database.Models.ProgramDetail", "ProgramDetail")
                        .WithMany()
                        .HasForeignKey("ProgramId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProgramApp.Database.Entity.Implementation.MandatoryVisibleEntity.ResumeEntity", "Resume")
                        .WithMany()
                        .HasForeignKey("ResumeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProgramApp.Database.Entity.Implementation.MandatoryVisibleEntity.WorkExperienceEntity", "WorkExperiences")
                        .WithMany()
                        .HasForeignKey("WorkExperiencesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CurrentResidence");

                    b.Navigation("DOB");

                    b.Navigation("Educations");

                    b.Navigation("Gender");

                    b.Navigation("IdNumber");

                    b.Navigation("Nationality");

                    b.Navigation("PhoneNumber");

                    b.Navigation("ProgramDetail");

                    b.Navigation("Resume");

                    b.Navigation("WorkExperiences");
                });

            modelBuilder.Entity("ProgramApp.Database.Entity.Implementation.MandatoryVisibleEntity.EducationEntity", b =>
                {
                    b.Navigation("EducationInfo");
                });

            modelBuilder.Entity("ProgramApp.Database.Entity.Implementation.MandatoryVisibleEntity.WorkExperienceEntity", b =>
                {
                    b.Navigation("WorkExperienceInfo");
                });

            modelBuilder.Entity("ProgramApp.Database.Models.Stage", b =>
                {
                    b.Navigation("StageList");
                });

            modelBuilder.Entity("ProgramApp.Database.Models.User", b =>
                {
                    b.Navigation("Questions");
                });
#pragma warning restore 612, 618
        }
    }
}
